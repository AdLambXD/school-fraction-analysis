name: Build and Release Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    - name: Install dependencies
      run: npm install -g @capacitor/cli

    - name: Create Capacitor project
      run: |
        mkdir temp-app
        cd temp-app
        npm init -y
        npm install @capacitor/core @capacitor/cli @capacitor/android
        npx cap init --web-dir public --app-name "学生成绩可视化系统" --app-id "com.example.scorevisualizer"
        npx cap add android
        mkdir -p public
        cp -r ../* public/
        rm -rf public/android public/.github
        npx cap sync

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2

    - name: Make Gradle Wrapper Executable
      run: chmod +x temp-app/android/gradlew

    - name: Setup Keystore
      run: |
        echo "${{ secrets.KEYSTORE_CONTENT }}" | base64 --decode > temp-app/android/app/my-release-key.keystore
        echo "storeFile=my-release-key.keystore" >> temp-app/android/local.properties
        echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> temp-app/android/local.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> temp-app/android/local.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> temp-app/android/local.properties

    - name: Build Android APK
      run: |
        cd temp-app/android
        ./gradlew assembleRelease

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: score-visualizer-app
        path: temp-app/android/app/build/outputs/apk/release/app-release-unsigned.apk

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1  # 使用 v1 版本
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: temp-app/android/app/build/outputs/apk/release/app-release-unsigned.apk
        asset_name: score-visualizer-v${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive
